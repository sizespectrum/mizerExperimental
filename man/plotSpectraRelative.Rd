% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotRelative.R
\name{plotSpectraRelative}
\alias{plotSpectraRelative}
\alias{plotlySpectraRelative}
\title{Plot the relative difference between two spectra}
\usage{
plotSpectraRelative(object1, object2, ...)

plotlySpectraRelative(object1, object2, ...)
}
\arguments{
\item{object1}{An object of class MizerSim or MizerParams}

\item{object2}{An object of class MizerSim or MizerParams}

\item{...}{Parameters passed to \code{plotSpectra()}}
}
\value{
A ggplot2 object
}
\description{
This plots the difference between the spectra relative to their average. So
if we denote the number density from the first object as \eqn{N_1(w)} and
that from the second object as \eqn{N_2(w)}, then this plot shows
\deqn{2 (N_2(w) - N_1(w)) / (N_2(w) + N_1(w)).}
}
\details{
The individual spectra are calculated by the \code{\link[=plotSpectra]{plotSpectra()}} function which
is passed all additional arguments you supply. So you can for example
determine a size range over which to average the simulation results via the
\code{time_range} argument. See \code{\link[=plotSpectra]{plotSpectra()}} for more options.

Note that it does not matter whether the relative difference is calculated
for the number density or the biomass density or the biomass density in log
weight because the factors of \eqn{w} by which the densities differ cancels
out in the relative difference.
}
\examples{
sim1 <- project(NS_params, t_max = 10)
sim2 <- project(NS_params, effort = 0.5, t_max = 10)
plotSpectraRelative(sim1, sim2)
}
